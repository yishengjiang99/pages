name: PHP Server Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  host-php-server:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up PHP environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Specify your desired PHP version
          extensions: mbstring, xml, pdo, pdo_mysql # Add required PHP extensions
          coverage: none

      # Install Composer dependencies (if your project uses Composer)
      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --optimize-autoloader
        if: file_exists('composer.json')

      # Run PHP built-in server
      - name: Start PHP Server
        run: php -S 0.0.0.0:8000 -t public/ &
        env:
          # Optional: Add environment variables if needed
          APP_ENV: production
        # Note: The '&' runs the server in the background

      # Optional: Wait for the server to be ready
      - name: Wait for PHP Server
        run: sleep 5 && curl --fail http://localhost:8000
        timeout-minutes: 1

      # Run tests or other tasks while the server is running
      - name: Run Tests
        run: |
          # Example: Run PHPUnit tests if applicable
          if [ -f vendor/bin/phpunit ]; then
            vendor/bin/phpunit
          else
            echo "No PHPUnit tests found, skipping..."
          fi

      # Optional: Perform additional checks (e.g., linting)
      - name: Run PHP Linting
        run: composer run-script lint
        if: file_exists('composer.json')

      # Optional: Deploy or perform additional steps
      - name: Deploy to Hosting (Placeholder)
        run: |
          echo "Add deployment steps here (e.g., to a hosting service)"
        # Replace with actual deployment steps if needed